var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(n){const s=suggestions.classList.contains("d-none");if(s)return;const e=[...suggestions.querySelectorAll("a")];if(e.length===0)return;const t=e.indexOf(document.activeElement);if(n.key==="ArrowUp"){n.preventDefault();const s=t>0?t-1:0;e[s].focus()}else if(n.key==="ArrowDown"){n.preventDefault();const s=t+1<e.length?t+1:t;e[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/quickstart/installation/",title:"Installation",description:"How to install all fastro requirements",content:" Install the Deno CLI. This is for mac. Other installation methods can be found here.  curl -fsSL https://deno.land/install.sh | sh   Ensure deno is available in the environment path  deno --version   Install vscode deno extension. Open the VS Code command palette with Ctrl+Shift+P, and run:  Deno: Initialize Workspace Configuration  "}).add({id:1,href:"/docs/quickstart/create-webapp-directory/",title:"Create webapp directory",description:"How to create webapp directory",content:" This will be the working directory of your web application.  mkdir webapp \u0026amp;\u0026amp; cd webapp   Open vscode editor from the working directory  code .  "}).add({id:2,href:"/docs/quickstart/create-entry-point-file/",title:"Create entry point file",description:"This will be the entry point of Deno CLI.",content:"Entrypoint # import application from \u0026quot;https://deno.land/x/fastro@v0.58.4/server/mod.ts\u0026quot;; const app = application(); app.get(\u0026quot;/\u0026quot;, () =\u0026gt; \u0026quot;Hello world\u0026quot;); await app.serve();  How to run # You can run the webapp from local.\ndeno run -A webapp/hello_world.ts  Or try running a simple program from the repo.\ndeno run -A https://deno.land/x/fastro@v0.58.4/examples/hello_world.ts  Examples # You can find more examples on this page.\n"}).add({id:3,href:"/docs/quickstart/deployments/",title:"Deployments",description:"How to deploy the web app to deno deploy.",content:"deployctl is a command line tool for deploying your code to Deno Deploy, and it\u0026rsquo;s also a GitHub Action for the same purpose.\nYou can install deployctl command with the below command:\ndeno install --allow-read --allow-write --allow-env --allow-net --allow-run --no-check -r -f https://deno.land/x/deploy/deployctl.ts  To deploy a local script:\ndeployctl deploy --project=helloworld webapp/hello_world.ts  To deploy a remote script:\ndeployctl deploy --project=helloworld https://deno.land/x/fastro/examples/hello_world.ts  "}).add({id:4,href:"/docs/quickstart/",title:"Quickstart",description:"Quickstart",content:""}).add({id:5,href:"/docs/",title:"Docs",description:"Docs Doks.",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()