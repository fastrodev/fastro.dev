<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blog on</title><link>https://fastro.dev/blog/</link><description>Recent content in Blog on</description><generator>Hugo -- gohugo.io</generator><language>en-US</language><lastBuildDate>Tue, 06 Oct 2020 08:49:55 +0000</lastBuildDate><atom:link href="https://fastro.dev/blog/index.xml" rel="self" type="application/rss+xml"/><item><title>SSR Simple Example with Deno</title><link>https://fastro.dev/blog/ssr-simple-example-with-deno/</link><pubDate>Mon, 09 May 2022 09:19:42 +0100</pubDate><guid>https://fastro.dev/blog/ssr-simple-example-with-deno/</guid><description>SSR implementation is quite complicated. fastro simplifies it with a simple API. it does bundling and hydration at application initiation so that the loading process is faster.
Configuration # Create deno configuration file: deno.json
{ &amp;quot;compilerOptions&amp;quot;: { &amp;quot;strict&amp;quot;: true, &amp;quot;jsx&amp;quot;: &amp;quot;react-jsx&amp;quot;, &amp;quot;jsxImportSource&amp;quot;: &amp;quot;https://esm.sh/react&amp;quot; } } Create vscode configuration file: .vscode/settings.json
{ &amp;quot;files.eol&amp;quot;: &amp;quot;\n&amp;quot;, &amp;quot;files.trimTrailingWhitespace&amp;quot;: true, &amp;quot;[typescript]&amp;quot;: { &amp;quot;editor.defaultFormatter&amp;quot;: &amp;quot;denoland.vscode-deno&amp;quot;, &amp;quot;editor.formatOnSave&amp;quot;: true, &amp;quot;editor.codeActionsOnSave&amp;quot;: { &amp;quot;source.organizeImports&amp;quot;: true } }, &amp;quot;[typescriptreact]&amp;quot;: { &amp;quot;editor.</description></item></channel></rss>